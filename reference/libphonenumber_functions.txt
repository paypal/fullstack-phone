https://github.com/google/libphonenumber/blob/master/javascript/i18n/phonenumbers/phonenumberutil.js

CONSTANTS
---------
i18n.phonenumbers.Error
i18n.phonenumbers.PhoneNumberFormat
i18n.phonenumbers.PhoneNumberType
i18n.phonenumbers.PhoneNumberUtil.MatchType
i18n.phonenumbers.PhoneNumberUtil.ValidationResult

FUNCTIONS
---------
canBeInternationallyDialled
convertAlphaCharactersInNumber
extractCountryCode
extractPossibleNumber
format
formatByPattern
formatInOriginalFormat
formatNationalNumberWithCarrierCode
formatNationalNumberWithPreferredCarrierCode
formatNumberForMobileDialing
formatOutOfCountryCallingNumber
formatOutOfCountryKeepingAlphaChars
formattingRuleHasFirstGroupOnly
getCountryCodeForRegion
getCountryMobileToken
getExampleNumber
getExampleNumberForNonGeoEntity
getExampleNumberForType
getLengthOfGeographicalAreaCode
getLengthOfNationalDestinationCode
getMetadataForNonGeographicalRegion
getMetadataForRegion
getNationalSignificantNumber
getNddPrefixForRegion
getNumberType
getRegionCodeForCountryCode
getRegionCodeForNumber // Only guarantees correct results for valid, full numbers
getRegionCodesForCountryCode
getSupportedCallingCodes
getSupportedGlobalNetworkCallingCodes
getSupportedRegions
getSupportedTypesForNonGeoEntity
getSupportedTypesForRegion
isAlphaNumber
isNANPACountry
isNumberGeographical
isNumberMatch
isPossibleNumber
isPossibleNumberForType
isPossibleNumberForTypeWithReason
isPossibleNumberString
isPossibleNumberWithReason
isValidNumber
isValidNumberForRegion
isViablePhoneNumber
matchesEntirely
matchesPrefix
maybeExtractCountryCode
maybeStripExtension
maybeStripInternationalPrefixAndNormalize
maybeStripNationalPrefixAndCarrierCode
normalize
normalizeDiallableCharsOnly
normalizeDigitsOnly
parse
parseAndKeepRawInput
truncateTooLongNumber
